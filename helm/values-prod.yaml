replicaCount: 1

image:
  repository: 837238518041.dkr.ecr.us-east-2.amazonaws.com/vms/visitor-management-service
  tag: latest
  pullPolicy: Always

env:
  - name: "LOG_TARGET"
    value: "php://stdout"
  - name: POSTGRES_HOST
    value: "postgres.laureninnovations.production"
  - name: POSTGRES_DB
    value: "navigate"
  - name: POSTGRES_USER
    value: "lauren"
  - name: POSTGRES_PASSWORD
    value: "ToS3othie6"
  - name: POSTGRES_PORT
    value: "5432"
  - name: REDIS_HOST
    value: "redis.laureninnovations.production"
  - name: REDIS_PORT
    value: "6379"
  - name: AUTH_URL
    value: "https://auth.navigatep.com"
  - name: CLIENT_URL
    value: http://navigate360vm.com

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  name:

podSecurityContext: {}

securityContext: {}

service:
  type: LoadBalancer
  port: 80
  annotations:
    external-dns.alpha.kubernetes.io/hostname: api.navigate360vm.com
    # Note that the backend talks over HTTP.
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    # TODO: Fill in with the ARN of your certificate.
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: 	arn:aws:acm:us-east-2:837238518041:certificate/b38f7266-2d52-4a62-a4fc-76ba1d5e81a0
    # Only run SSL on the port named "https" below.
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"

ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: chart-example.local
      paths: []
  tls: []

resources: {}
nodeSelector: {}
tolerations: []
affinity: {}
